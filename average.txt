for brightness : brightnessctl

wpctl : for volume up/down and more

mouse + mod : for hold you modifier key workspace one to another (firefox)

Tauri plugins aren't properly installed or configured in react + tauri : 

so , npm install @tauri-apps/plugin-shell

#rust side

cd src
cargo add tauri-plugin-shell

go build cmds:

go build -o build/wipe_tool ./cmd/wipe

rust + cargo : 

step 1: install cargo + rust 

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

source $Home/.cargo/env

rustc -v
cargo -v


tauri prerequisites: 

sudo apt update

sudo apt install build-essential libssl-dev pkg-config

tauri cli:

cargo install tauri-cli

run tauri dev:

npm install
npm run tauri dev / tauri dev

rust toolchain stable : 

rustup default stable

tauri plugin module error : 

step 1: cargo.toml 

tauri-plugin-opener = "2.5.0"

cargo update
npm install

hdparm : ATA cmds

wipe algorithms : dod 5220.22-m gutmann nist 800-88

sgdisk : scsi devices 

nvme-cli : nvme ssds 

use digital signature : 

use elliptic curve cyptography ecc : faster and lighter than rsa

openssl
libsodium

audit trail : hash log of wipe operation

data wipe cert : 

device details 

siping algorithms 

cryptographic hash + digital signature 

server verifing the json cert

NIST SP 800-88 Rev 1 : Clear, Purge, Destroy

for ssds : ata secure erase / crypto erase commands

dod/gutmann wipes for enterprises

tamper proff cert 

blockchain ledger for enterprises verification, apis for recyclers : future hooks


bypass locked devices : even if the os is currupted you  can still boot from usb and wipe

full control of hardware ; acan access  storage direclty 

buildroot / youcto project : create lightweight linux distro 

this os boots super fast and only has drivers + librareies needed for disk wiping 

why qt/gtk : lightweight qt : good for kiosks / tablets too and gtk : simpler, widely used in linux apps 

libsodium : use in digital signature 

hashing : sha-256 for wipe logs

for gov level transperency : blockchain ledger (Hyperledger, Ethereum sidechai) for govt level transperency

Svelte + tailwind css : tauri love this simple ui with just a few screeens  less boilerplate  clean ui 

flutter + dart : desktop + mobile application 

strong ecosystem for ui (material + cuperitino widgets)

greate performance ( compiled, not webview)

tailwind + daisyUI : quick component setup 


ipc(inter-process communication): 

listdevices()

startwipe(device, method)

getLogs()

generateCertificate()

WMI/DeviceIoControl APIs : For windows for device enumeration

golang-go : 

scaffold react + vite + tauri

npm create vite@latest eraser-app -- -- template react

cd eraser-app

npm install

initialize tauri : 

npx tauri init 


@tauri-apps/api : tauri js api

gofpdf : certificate pdf 

crypto/ecdsa : certificate for signing

loopback/virtual disk

dd if=/dev/zero of=virtual.img bs=1M count=100 #100MB file

sudo losetup -fP virtual.img 

lsblk

LightGBM/XGBoost/CatBoost : ml algorithms gradient boosted transperency

ssh : connect to you instance 

git curl build-essential ufw 

pm2 : opensource tool to run nodejs weabpplication like backend

pm2 start npm --name backend -- run start

pm2 save


build fronted : 

npm run build

npm install -g serve

pm2 start "serve -s build -l 3000" --name fontend 

pm2 save


setup rever proxy with ngnix : 


sudo apt install ngnix -y 


sudo nano /etc/ngnix/site-available/lostfound

add this config (backend on port 5000 and frontend on 3000

enable site :

sudo ln -s /etc/ngnix/site-available/lostfound /etc/ngnix/site-enabled/

sudo ngnix -t 

sudo systemctl restart ngnix

enable firewall :

sudo ufw allow OpenSSH

sudo ufw allow 'Ngnix Full'

sudo ufw enable

add ssl with encypt :


sudo apt install certbot python3-certbot-ngnix -y 

sudo certbot --ngnix -d youdomain.com 

permission denied(public key) :


ls -al ~/.ssh 

generate new key 

sshkeygen : used to generate key

ssh-keygen -t ed34234 -C "athrva@gmal.com"

add your public key to the instance:

mkdir -p ~/.ssh 

nano ~/.ssh/authorized_keys 

paste the generated key

chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys

ssh into you instance 

ssh -i ~/.ssh/id_ed25519 ubuntu@210.79.128.132

install next js properly 

npm install next react react-dom

npm run dev

adding the swap space 

sudo fallocate -l 2G /swapfile

sudo fallocate -l 2G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile


make it perment

iecho '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab



